# ===== style =====

[[plugins]]
repo = 'pineapplegiant/spaceduck'
hook_add = '''
  if exists('+termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
  endif

  colorscheme spaceduck
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
  let g:airline_theme = 'spaceduck'
  let g:airline#extensions#tabline#enabled = 1
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'


# ===== 

# comment out
[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  vnoremap ? : '<,'>TComment<CR>
'''

# git diff
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set signcolumn=yes
  let g:gitgutter_async = 1
  let g:gitgutter_sign_modified = 'rw'
  highlight GitGutterAdd ctermfg=green
  highlight GitGutterChange ctermfg=yellow
  highlight GitGutterDelete ctermfg=red
  highlight GitGutterChangeDelete ctermfg=yellow
'''

# search
[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = '.install --all'
merged = 0
[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \ 'rg --column --line-number --hidden --ignore-case --no-heading --color=always '.shellescape(<q-args>), 1,
  \ <bang>0 ? fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'up:60%')
  \ : fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'right:50%:hidden', '?'),
  \ <bang>0)
  nnoremap <C-g> :Rg<Space>
  nnoremap <C-p> :GFiles<CR>
  nnoremap <C-h> :History<CR>
'''


# ===== coc =====

[[plugins]]
repo = 'neoclide/coc.nvim'
build = 'coc#util#install()'
hook_add = '''
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
  " Remap for rename current word
  nmap <leader>rn <Plug>(coc-rename)
  " Highlight symbol under cursor on CursorHold
  autocmd CursorHold * silent call CocActionAsync('highlight')
  " Use K for show documentation in preview window
  nnoremap <silent> K :call <SID>show_documentation()<CR>
  function! s:show_documentation()
    if &filetype == 'vim'
      execute 'h '.expand('<cword>')
    else
      call CocAction('doHover')
    endif
  endfunction
'''

[[plugins]]
repo = 'weirongxu/coc-explorer'
depends = 'coc.nvim'
hook_add = '''
  nmap <space>e :CocCommand explorer<CR>
'''

[[plugins]]
repo = 'neoclide/coc-tsserver'
depends = 'coc.nvin'

[[plugins]]
repo = 'kkiyama117/coc-toml'
depends = 'coc.nvim'


